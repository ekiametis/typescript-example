openapi: "3.0.0"

info:
  version: v2
  title: Swagger made by Emmanuel Kiametis
servers:
  - url: http://localhost:3333/v2
  
tags: 
  - name: Users
    description: Resources to manage users


paths:
  /users:
    post:
      tags:
        - Users
      summary: Register an user
      description: Register an user
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ICreateUserRequestDTO'
      responses:
        201:
          description: User registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICreateUserResponseDTO'
        409:
          description: User already exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
    get:
      tags:
        - Users
      summary: Retrieve a list of users
      description: Retrieve a list of users allowing to pass query parameters to filter the result
      parameters:
        - in: query
          name: id
          schema: 
            type: string
            description: User identifier
        - in: query
          name: name
          schema: 
            type: string
            description: User name
        - in: query
          name: email
          schema: 
            type: string
            description: User email
        - in: query
          name: birthdate
          schema: 
            type: string
            format: date
            description: User birthdate
      responses:
        200:
          description: An user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IListUserResponseDTO'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
  /users/{id}:
    put:
      tags:
        - Users
      summary: Update an user
      description: Update an user
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: string
            description: User identifier
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUpdateUserRequestDTO'
      responses:
        201:
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IUpdateUserResponseDTO'
        404:
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
    patch:
      tags:
        - Users
      summary: Update the user's birthdate
      description: Update the user's birthdate
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: string
            description: User identifier
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              required:
              - birthdate
              properties:
                birthdate:
                  type: string
                  format: date
                  description: User birthdate
      responses:
        201:
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IUpdateUserResponseDTO'
        404:
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
    get:
      tags:
        - Users
      summary: Retrieve an user by identifier
      description: Retrieve an user by identifier
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: string
            description: User identifier
      responses:
        200:
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IRetrieveUserResponseDTO'
        404:
          description: User does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
        500:
          description: Internal error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IHttpException'
components:
  schemas:
    IRetrieveUserResponseDTO:
      required:
      - id
      - name
      - email
      - birthdate
      properties:
        id:
          type: string
          description: User identifier
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    IUpdateUserRequestDTO:
      required:
        - name
        - email
        - birthdate
      properties:
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    IUpdateUserResponseDTO:
      required:
      - id
      - name
      - email
      - birthdate
      properties:
        id:
          type: string
          description: User identifier
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    ICreateUserRequestDTO:
      required:
      - name
      - email
      - birthdate
      properties:
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    ICreateUserResponseDTO:
      required:
      - id
      - name
      - email
      - birthdate
      properties:
        id:
          type: string
          description: User identifier
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    IUserResponseDTO:
      required:
      - id
      - name
      - email
      - birthdate
      properties:
        id:
          type: string
          description: User identifier
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        birthdate:
          type: string
          format: date
          description: User birthdate
    IListUserResponseDTO:
      required:
      - list
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/IUserResponseDTO'
    IHttpException:
      required:
      - httpStatusCode
      - errorCode
      - errorMessage
      type: object
      properties:
        httpStatusCode:
          type: number
          description: Http status code
        errorCode:
          type: number
          description: Error code
        errorMessage:
          type: string
          description: Error message
        detailCode:
          type: number
          description: Detail error code
        detailMessage:
          type: string
          description: Detail message